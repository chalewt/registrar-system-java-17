/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package registrarui;

import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import registrarlib.CurrentUser;
import registrarlib.DbConnection;

/**
 *
 * @author ChalewT
 */
public class RegistrarMain extends javax.swing.JFrame {

    /**
     * Creates new form RegistrarMain
     */
    public RegistrarMain() {
        initComponents();
        ImageIcon icon = new ImageIcon(getClass().getResource("/image/risicon.jpg"));//NOI18N
        this.setIconImage(icon.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        mnuiLogout = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        mnuOrganization = new javax.swing.JMenu();
        mnuiNewFaculty = new javax.swing.JMenuItem();
        mnuiNewDepartment = new javax.swing.JMenuItem();
        mnuiFacultyList = new javax.swing.JMenuItem();
        mnuCurriculum = new javax.swing.JMenu();
        mnuiNewCurriculum = new javax.swing.JMenuItem();
        mnuiNewCourse = new javax.swing.JMenuItem();
        mnuiViewCurriculum = new javax.swing.JMenuItem();
        mnuStudent = new javax.swing.JMenu();
        mnuiNewStudent = new javax.swing.JMenuItem();
        mnuiViewStudent = new javax.swing.JMenuItem();
        mnuStaff = new javax.swing.JMenu();
        mnuiNewEmployee = new javax.swing.JMenuItem();
        mnuiViewStaff = new javax.swing.JMenuItem();
        mnuAccount = new javax.swing.JMenu();
        mnuiCreateAccount = new javax.swing.JMenuItem();
        mnuiManangeAccount = new javax.swing.JMenuItem();
        mnuiAssignRole = new javax.swing.JMenuItem();
        mnuiMangaeRole = new javax.swing.JMenuItem();
        mnuiChangePassword = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        mnuiFacultyReport = new javax.swing.JMenuItem();
        mnuiStudentListReport = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registrar Information System");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        desktopPane.setBackground(new java.awt.Color(153, 153, 255));

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        mnuiLogout.setText("Logout");
        mnuiLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiLogoutActionPerformed(evt);
            }
        });
        fileMenu.add(mnuiLogout);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        mnuOrganization.setMnemonic('O');
        mnuOrganization.setText("Organization");
        mnuOrganization.setEnabled(false);

        mnuiNewFaculty.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        mnuiNewFaculty.setText("New Faculty");
        mnuiNewFaculty.setEnabled(false);
        mnuiNewFaculty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiNewFacultyActionPerformed(evt);
            }
        });
        mnuOrganization.add(mnuiNewFaculty);

        mnuiNewDepartment.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        mnuiNewDepartment.setText("New Department");
        mnuiNewDepartment.setEnabled(false);
        mnuiNewDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiNewDepartmentActionPerformed(evt);
            }
        });
        mnuOrganization.add(mnuiNewDepartment);

        mnuiFacultyList.setText("View Faculty");
        mnuiFacultyList.setEnabled(false);
        mnuiFacultyList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiFacultyListActionPerformed(evt);
            }
        });
        mnuOrganization.add(mnuiFacultyList);

        menuBar.add(mnuOrganization);

        mnuCurriculum.setMnemonic('C');
        mnuCurriculum.setText("Curriculum");
        mnuCurriculum.setToolTipText("");
        mnuCurriculum.setEnabled(false);

        mnuiNewCurriculum.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        mnuiNewCurriculum.setText("New Curriculum");
        mnuiNewCurriculum.setEnabled(false);
        mnuiNewCurriculum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiNewCurriculumActionPerformed(evt);
            }
        });
        mnuCurriculum.add(mnuiNewCurriculum);

        mnuiNewCourse.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        mnuiNewCourse.setText("New Course");
        mnuiNewCourse.setEnabled(false);
        mnuiNewCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiNewCourseActionPerformed(evt);
            }
        });
        mnuCurriculum.add(mnuiNewCourse);

        mnuiViewCurriculum.setText("View Curriculum");
        mnuiViewCurriculum.setEnabled(false);
        mnuCurriculum.add(mnuiViewCurriculum);

        menuBar.add(mnuCurriculum);

        mnuStudent.setText("Student");
        mnuStudent.setEnabled(false);

        mnuiNewStudent.setText("New Student");
        mnuiNewStudent.setEnabled(false);
        mnuiNewStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiNewStudentActionPerformed(evt);
            }
        });
        mnuStudent.add(mnuiNewStudent);

        mnuiViewStudent.setText("View Student");
        mnuiViewStudent.setEnabled(false);
        mnuStudent.add(mnuiViewStudent);

        menuBar.add(mnuStudent);

        mnuStaff.setText("Staff");
        mnuStaff.setEnabled(false);

        mnuiNewEmployee.setText("New Employee");
        mnuiNewEmployee.setEnabled(false);
        mnuiNewEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiNewEmployeeActionPerformed(evt);
            }
        });
        mnuStaff.add(mnuiNewEmployee);

        mnuiViewStaff.setText("View Staff");
        mnuStaff.add(mnuiViewStaff);

        menuBar.add(mnuStaff);

        mnuAccount.setText("Account");
        mnuAccount.setEnabled(false);

        mnuiCreateAccount.setText("Create Account");
        mnuiCreateAccount.setEnabled(false);
        mnuiCreateAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiCreateAccountActionPerformed(evt);
            }
        });
        mnuAccount.add(mnuiCreateAccount);

        mnuiManangeAccount.setText("Manage Account");
        mnuiManangeAccount.setEnabled(false);
        mnuiManangeAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiManangeAccountActionPerformed(evt);
            }
        });
        mnuAccount.add(mnuiManangeAccount);

        mnuiAssignRole.setText("Assign Role");
        mnuiAssignRole.setEnabled(false);
        mnuiAssignRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiAssignRoleActionPerformed(evt);
            }
        });
        mnuAccount.add(mnuiAssignRole);

        mnuiMangaeRole.setText("Manage Role");
        mnuiMangaeRole.setEnabled(false);
        mnuiMangaeRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiMangaeRoleActionPerformed(evt);
            }
        });
        mnuAccount.add(mnuiMangaeRole);

        mnuiChangePassword.setText("Change Password");
        mnuiChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiChangePasswordActionPerformed(evt);
            }
        });
        mnuAccount.add(mnuiChangePassword);

        menuBar.add(mnuAccount);

        jMenu1.setText("Report");

        mnuiFacultyReport.setText("Department List");
        mnuiFacultyReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiFacultyReportActionPerformed(evt);
            }
        });
        jMenu1.add(mnuiFacultyReport);

        mnuiStudentListReport.setText("Student List");
        mnuiStudentListReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiStudentListReportActionPerformed(evt);
            }
        });
        jMenu1.add(mnuiStudentListReport);

        menuBar.add(jMenu1);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentMenuItem.setMnemonic('c');
        contentMenuItem.setText("Contents");
        helpMenu.add(contentMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1087, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void mnuiNewFacultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiNewFacultyActionPerformed
        //Call/Display New Faculty Registration Form
        NewFaculty faculty = new NewFaculty(this, true);
        faculty.setLocationRelativeTo(this);
        faculty.setVisible(true);
    }//GEN-LAST:event_mnuiNewFacultyActionPerformed

    private void mnuiNewCurriculumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiNewCurriculumActionPerformed
        NewCurriculum curriculum = new NewCurriculum(this, true);
        curriculum.setLocationRelativeTo(this);
        curriculum.setVisible(true);

    }//GEN-LAST:event_mnuiNewCurriculumActionPerformed

    private void mnuiNewDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiNewDepartmentActionPerformed
        // TODO add your handling code here:
        NewDepartment dept = new NewDepartment(this, true);
        dept.setLocationRelativeTo(this);
        dept.setVisible(true);
    }//GEN-LAST:event_mnuiNewDepartmentActionPerformed

    private void mnuiFacultyListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiFacultyListActionPerformed
        FacultyList faculty = new FacultyList();
        desktopPane.add(faculty);
        faculty.setVisible(true);
        faculty.toFront();
    }//GEN-LAST:event_mnuiFacultyListActionPerformed

    private void mnuiNewStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiNewStudentActionPerformed
        NewStudent student = new NewStudent(this, true);
        student.setLocationRelativeTo(this);
        student.setVisible(true);
    }//GEN-LAST:event_mnuiNewStudentActionPerformed

    private void mnuiNewCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiNewCourseActionPerformed
        NewCourse course = new NewCourse(this, true);
        course.setLocationRelativeTo(this);
        course.setVisible(true);
    }//GEN-LAST:event_mnuiNewCourseActionPerformed

    private void mnuiNewEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiNewEmployeeActionPerformed
        NewEmployee employee = new NewEmployee(this, true);
        employee.setLocationRelativeTo(this);
        employee.setVisible(true);
    }//GEN-LAST:event_mnuiNewEmployeeActionPerformed

    private void mnuiCreateAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiCreateAccountActionPerformed
        // TODO add your handling code here:
        CreateAccount account = new CreateAccount(this, true);
        account.setLocationRelativeTo(this);
        account.setVisible(true);
    }//GEN-LAST:event_mnuiCreateAccountActionPerformed

    private void mnuiManangeAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiManangeAccountActionPerformed
        // TODO add your handling code here:
        ManageAccount acc = new ManageAccount();
        desktopPane.add(acc);
        acc.setVisible(true);
        acc.toFront();
    }//GEN-LAST:event_mnuiManangeAccountActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        if (CurrentUser.isLoggedin() == false) {
            menuBar.setVisible(false);
            JOptionPane.showMessageDialog(this, "Sorry, you are not logged in.\nPlease Login first to use the system.", "Registrar Information System", JOptionPane.ERROR_MESSAGE);
            Login lg = new Login();
            lg.setVisible(true);
            this.dispose();
            return;
        }
        if (CurrentUser.hasRole("admin")) {
            mnuAccount.setEnabled(true);
            mnuiAssignRole.setEnabled(true);
            mnuiCreateAccount.setEnabled(true);
            mnuiManangeAccount.setEnabled(true);
            mnuiMangaeRole.setEnabled(true);
        }
        if (CurrentUser.hasRole("dean")) {
            //
            mnuOrganization.setEnabled(true);
            mnuiNewFaculty.setEnabled(true);
            mnuiNewDepartment.setEnabled(true);
            mnuiFacultyList.setEnabled(true);
            //
            mnuCurriculum.setEnabled(true);
            mnuiNewCurriculum.setEnabled(true);
            mnuiViewCurriculum.setEnabled(true);
            mnuiNewCourse.setEnabled(true);
            //
            mnuStaff.setEnabled(true);
            mnuiNewEmployee.setEnabled(true);
            mnuiViewStaff.setEnabled(true);
            //
            mnuStudent.setEnabled(true);
            mnuiNewStudent.setEnabled(true);
            mnuiViewStudent.setEnabled(true);
        }
        if (CurrentUser.hasRole("head")) {
            //
            mnuStaff.setEnabled(true);
            mnuiViewStaff.setEnabled(true);
            //
            mnuCurriculum.setEnabled(true);
            mnuiViewCurriculum.setEnabled(true);
            //
            mnuOrganization.setEnabled(true);
            mnuiFacultyList.setEnabled(true);
        }
        if (CurrentUser.hasRole("instructor")) {
            mnuCurriculum.setEnabled(true);
            mnuiViewCurriculum.setEnabled(true);
            //
            mnuStudent.setEnabled(true);
            mnuiViewStudent.setEnabled(true);
            //
        }

    }//GEN-LAST:event_formWindowOpened

    private void mnuiChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiChangePasswordActionPerformed
        ChangePassword cpass = new ChangePassword(this, true);
        cpass.setLocationRelativeTo(this);
        cpass.setVisible(true);
    }//GEN-LAST:event_mnuiChangePasswordActionPerformed

    private void mnuiMangaeRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiMangaeRoleActionPerformed
        ManageRole role = new ManageRole();
        desktopPane.add(role);
        role.setVisible(true);
        role.toFront();
    }//GEN-LAST:event_mnuiMangaeRoleActionPerformed

    private void mnuiAssignRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiAssignRoleActionPerformed
        AssignRole acc = new AssignRole(this, true);
        acc.setLocationRelativeTo(this);
        acc.setVisible(true);
    }//GEN-LAST:event_mnuiAssignRoleActionPerformed

    private void mnuiLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiLogoutActionPerformed
        //Set Current user information
        CurrentUser.setLoggedin(false);
        CurrentUser.setCurrentPassword(null);
        CurrentUser.setCurrentUsername(null);
        //Get current user roles
        CurrentUser.setCurrentRoles(null);
        //Display the login form
        this.dispose();
        Login lg = new Login();
        lg.setVisible(true);

    }//GEN-LAST:event_mnuiLogoutActionPerformed

    private void mnuiFacultyReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiFacultyReportActionPerformed
       try {
            Connection conn = DbConnection.getConn();
            String facultyReport = getClass().getResource("report/DeptReport.jrxml").getFile();
            JasperReport jspReport = JasperCompileManager.compileReport(facultyReport);
            JasperPrint jspPrint = JasperFillManager.fillReport(jspReport, null, conn);
            JasperViewer vr = new JasperViewer(jspPrint, false);
            vr.setTitle(" Faculty List");
            vr.setVisible(true);
        } catch (SQLException | JRException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_mnuiFacultyReportActionPerformed

    private void mnuiStudentListReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiStudentListReportActionPerformed
         try {
            Connection conn = DbConnection.getConn();
            String facultyReport = "src\\report\\StduentReport.jrxml";
            JasperReport jspReport = JasperCompileManager.compileReport(facultyReport);
            JasperPrint jspPrint = JasperFillManager.fillReport(jspReport, null, conn);
            JasperViewer vr = new JasperViewer(jspPrint, false);
            vr.setTitle(" Student List");
            vr.setVisible(true);
        } catch (SQLException | JRException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
    }//GEN-LAST:event_mnuiStudentListReportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {// Metal , Nimbus
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarMain.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarMain.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarMain.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarMain.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrarMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem contentMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu mnuAccount;
    private javax.swing.JMenu mnuCurriculum;
    private javax.swing.JMenu mnuOrganization;
    private javax.swing.JMenu mnuStaff;
    private javax.swing.JMenu mnuStudent;
    private javax.swing.JMenuItem mnuiAssignRole;
    private javax.swing.JMenuItem mnuiChangePassword;
    private javax.swing.JMenuItem mnuiCreateAccount;
    private javax.swing.JMenuItem mnuiFacultyList;
    private javax.swing.JMenuItem mnuiFacultyReport;
    private javax.swing.JMenuItem mnuiLogout;
    private javax.swing.JMenuItem mnuiManangeAccount;
    private javax.swing.JMenuItem mnuiMangaeRole;
    private javax.swing.JMenuItem mnuiNewCourse;
    private javax.swing.JMenuItem mnuiNewCurriculum;
    private javax.swing.JMenuItem mnuiNewDepartment;
    private javax.swing.JMenuItem mnuiNewEmployee;
    private javax.swing.JMenuItem mnuiNewFaculty;
    private javax.swing.JMenuItem mnuiNewStudent;
    private javax.swing.JMenuItem mnuiStudentListReport;
    private javax.swing.JMenuItem mnuiViewCurriculum;
    private javax.swing.JMenuItem mnuiViewStaff;
    private javax.swing.JMenuItem mnuiViewStudent;
    // End of variables declaration//GEN-END:variables

    private void disableMenu() {
        //Account Managment
        mnuiAssignRole.setEnabled(false);
        mnuiCreateAccount.setEnabled(false);
        mnuiManangeAccount.setEnabled(false);
        mnuiMangaeRole.setEnabled(false);
        //
        mnuCurriculum.setEnabled(false);
        mnuOrganization.setEnabled(false);
        mnuStaff.setEnabled(false);
        mnuStudent.setEnabled(false);
        //
    }

}
